{"version":3,"sources":["components/MovieCard/MovieCard.js","components/Animation/Loader.js","pages/Home/Home.js","pages/Movies/Movies.js","pages/TVShows/TVShows.js","pages/Popular/Popular.js","pages/Upcoming/Upcoming.js","components/ActorCard/ActorCard.js","pages/SingleMovie/SingleMovie.js","assets/images/gif/loading.gif","containers/Header/Header.js","App.js","index.js"],"names":["MovieCard","props","movie_id","title","imgLink","rating","releaseDate","to","className","src","alt","Loader","version","id","xmlns","xlink","x","y","width","height","viewBox","fill","d","attributeType","attributeName","type","from","dur","repeatCount","Home","useState","isFetched","data","error","topRatedMovies","setTopRatedMovies","useEffect","axios","get","params","api_key","then","res","results","catch","err","map","movie","index","poster_path","vote_average","release_date","Movies","TVShows","tvShows","setTvShows","console","log","name","first_air_date","Popular","moviesList","setMoviesList","Upcoming","upcomingMovies","setUpcomingMovies","ArtistCard","charName","SingleMovie","match","url_tmdb","movieInfo","setMovieInfo","actorsList","setActorsList","recommendation","setRecommendation","movieData","actorData","cast","recData","backdrop_path","original_title","tagline","overview","nums","numArr","reverse","i","length","splice","formatNums","budget","runtime","href","homepage","target","genres","genre","actor","character","profile_path","Header","fillRule","clipRule","action","acceptCharset","placeholder","required","loadingGIF","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ffac502.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\n// SCSS\nimport './MovieCard.scss'\n\nconst MovieCard = (props) => {\n  const { movie_id, title, imgLink, rating, releaseDate } = props\n\n  return (\n    <Link to={`/movie/${movie_id}`} className=\"movie-card\">\n      <span className=\"movie-rating\">{rating}</span>\n      <img src={`https://image.tmdb.org/t/p/w500/${imgLink}`} alt={title} className=\"movie-img\" />\n      <div className=\"movie-lead\">\n        <h2 className=\"movie-title\">{title}</h2>\n        <h5 className=\"release-date\">{releaseDate}</h5>\n      </div>\n    </Link>\n  )\n}\n\nexport default MovieCard\n","import './Loader.scss'\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <svg\n        version=\"1.1\"\n        id=\"loader-1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xlink=\"http://www.w3.org/1999/xlink\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"50px\"\n        height=\"50px\"\n        viewBox=\"0 0 50 50\"\n      >\n        <path\n          fill=\"#000\"\n          d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"\n        >\n          <animateTransform\n            attributeType=\"xml\"\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 25 25\"\n            to=\"360 25 25\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// ? List of Movies Not to Show\n// import notToShow from '../../assets/NotToShow'\n\n// Component\nimport MovieCard from '../../components/MovieCard/MovieCard'\n// Animation\nimport Loader from './../../components/Animation/Loader'\n\nimport './Home.scss'\n\nconst Home = () => {\n  const [topRatedMovies, setTopRatedMovies] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n\n  // Getting Top Rated movies\n  useEffect(() => {\n    axios\n      .get(\"https://api.themoviedb.org/3/movie/top_rated?\", {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setTopRatedMovies({\n          isFetched: true,\n          data: res.data.results,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setTopRatedMovies({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n  }, [])\n\n  return (\n    <div>\n      {topRatedMovies.isFetched ? (\n        <div className=\"top-rated-movie-holder\">\n          {topRatedMovies.data.map((movie, index) => (\n            <MovieCard\n              movie_id={movie.id}\n              title={movie.title}\n              imgLink={movie.poster_path}\n              rating={movie.vote_average}\n              releaseDate={movie.release_date}\n              key={index}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"loading\">{Loader}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n\n/* Not To Show\n            topRatedMovies.data.map((movie, index) => {\n              notToShowMovieId !== movie.id ? (\n                <TopRatedMovieCard\n                  movie_id={movie.id}\n                  title={movie.title}\n                  imgLink={movie.poster_path}\n                  rating={movie.vote_average}\n                  releaseDate={movie.release_date}\n                  key={index}\n                />\n              ) : (<h1>NOT TO SHOW! ⛔️</h1>)\n            })\n*/","import './Movies.scss'\n\nconst Movies = () => {\n  return (\n    <div>\n      <h1>Movies</h1>\n    </div>\n  )\n}\n\nexport default Movies\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Components\nimport MovieCard from '../../components/MovieCard/MovieCard'\n// Animation\nimport Loader from '../../components/Animation/Loader'\n\n// SCSS\nimport './TVShows.scss'\n\nconst TVShows = () => {\n  const [tvShows, setTvShows] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.themoviedb.org/3/tv/popular?\", {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setTvShows({\n          isFetched: true,\n          data: res.data.results,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setTvShows({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n  }, [])\n\n  console.log(tvShows);\n\n  return (\n    <div>\n      {tvShows.isFetched ? (\n        <div className=\"tvshows-holder\">\n          {tvShows.data.map((movie, index) => (\n            <MovieCard\n              movie_id={movie.id}\n              title={movie.name}\n              imgLink={movie.poster_path}\n              rating={movie.vote_average}\n              releaseDate={movie.first_air_date}\n              key={index}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"loading\">{Loader}</div>\n      )}\n    </div>\n  )\n}\n\nexport default TVShows\n","import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\n// Components\nimport MovieCard from \"../../components/MovieCard/MovieCard\"\n// Animation\nimport Loader from '../../components/Animation/Loader'\n\n// SCSS\nimport \"./Popular.scss\"\n\nconst Popular = () => {\n  const [moviesList, setMoviesList] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n\n  // Getting Popural movies\n  useEffect(() => {\n    axios\n      .get(\"https://api.themoviedb.org/3/movie/popular?page=1\", {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setMoviesList({\n          isFetched: true,\n          data: res.data.results,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setMoviesList({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n  }, [])\n\n  return (\n    <div>\n      {moviesList.isFetched ? (\n        <div className=\"movies-holder\">\n          {moviesList.data.map((movie, index) => (\n            <MovieCard\n              title={movie.title}\n              movie_id={movie.id}\n              imgLink={movie.poster_path}\n              rating={movie.vote_average}\n              releaseDate={movie.release_date}\n              key={index}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"loading\">{Loader}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Popular\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Components\nimport MovieCard from \"../../components/MovieCard/MovieCard\"\n// Animation\nimport Loader from '../../components/Animation/Loader'\n\n// SCSS\nimport './Upcoming.scss'\n\nconst Upcoming = () => {\n  const [upcomingMovies, setUpcomingMovies] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n\n  // Getting Top Rated movies\n  useEffect(() => {\n    axios\n      .get(\"https://api.themoviedb.org/3/movie/upcoming?\", {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setUpcomingMovies({\n          isFetched: true,\n          data: res.data.results,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setUpcomingMovies({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n  }, [])\n\n  return (\n    <div>\n      {upcomingMovies.isFetched ? (\n        <div className=\"upcoming-movies-holder\">\n          {upcomingMovies.data.map((movie, index) => (\n            <MovieCard\n              title={movie.title}\n              movie_id={movie.id}\n              imgLink={movie.poster_path}\n              rating={movie.vote_average}\n              releaseDate={movie.release_date}\n              key={index}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"loding\">{Loader}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Upcoming\n","import { Link } from 'react-router-dom'\n\n// SCSS\nimport './ActorCard.scss'\n\nconst ArtistCard = (props) => {\n  const { id, name, charName, imgLink } = props\n\n  return (\n    <li className=\"artist-card\">\n      <Link to={`/actor/${id}`} className=\"actor-link\">\n        <img className=\"actor-img\" width=\"120\" src={imgLink} alt={name} />\n      </Link>\n      <Link to={`/actor/${id}`} className=\"actor-link actor-name-wrap\">\n        <h3 className=\"actor-name\">{name}</h3>\n        <h4 className=\"actor-char-name\">{charName}</h4>\n      </Link>\n    </li>\n  )\n}\n\nexport default ArtistCard\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n// Components\nimport ActorCard from '../../components/ActorCard/ActorCard'\nimport MovieCard from '../../components/MovieCard/MovieCard'\n// import Recommendation from '../../components/Recommendation/Recommendation'\n\n// Animation\nimport Loader from '../../components/Animation/Loader'\n\n// SCSS\nimport './SingleMovie.scss'\n\nconst SingleMovie = ({ match }) => {\n  const url_tmdb = `https://api.themoviedb.org/3/movie/${match.params.movie_id}`\n  // MOVIE LIST\n  const [movieInfo, setMovieInfo] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n  // ACTORS LIST\n  const [actorsList, setActorsList] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n  // RECOMMENDATIONS LIST\n  const [recommendation, setRecommendation] = useState({\n    isFetched: false,\n    data: [],\n    error: null,\n  })\n\n  useEffect(() => {\n    // MOVIE LIST\n    axios\n      .get(url_tmdb, {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setMovieInfo({\n          isFetched: true,\n          data: res.data,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setMovieInfo({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n      // ACTORS LIST\n      axios\n      .get(`${url_tmdb}/credits`, {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setActorsList({\n          isFetched: true,\n          data: res.data,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setActorsList({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n      // RECOMMENDATIONS LIST\n      axios\n      .get(`https://api.themoviedb.org/3/movie/${match.params.movie_id}/recommendations?`, {\n        params: {\n          api_key: \"408c4caa837834514ec8de6e5f7b12df\",\n        },\n      })\n      .then((res) => {\n        setRecommendation({\n          isFetched: true,\n          data: res.data.results,\n          error: false,\n        })\n      })\n      .catch((err) => {\n        setRecommendation({\n          isFetched: true,\n          data: [],\n          error: err,\n        })\n      })\n  }, [])\n\n  // Numbers Formatter - xx xxx xxx\n  function formatNums(nums) {\n    let numArr = [...`${nums}`].reverse()\n    for (let i = 0; i < numArr.length; i+=4)\n      numArr.splice(i, 0, ' ')\n    return numArr.reverse()\n  }\n\n  const movieData = movieInfo.data\n  const actorData = actorsList.data.cast\n  const recData = recommendation.data\n\n  return (\n    <>\n      {movieInfo.isFetched ? (\n        <div className=\"movie-info-card\">\n          <img className=\"movie-backdrop\" src={`https://image.tmdb.org/t/p/w500/${movieData.backdrop_path}`} alt={movieData.title}/>\n\n          <div className=\"container\">\n            {/* Movie Info */}\n            <div className=\"movie-info-wrap\">\n              <img className=\"movie-poster\" src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`} alt={movieData.title}/>\n              <div className=\"movie-info\">\n                <h2 className=\"movie-title\">{movieData.title}</h2>\n                <h4 className=\"movie-original-title\">{movieData.original_title}</h4>\n                <h3 className=\"movie-tagline\">{movieData.tagline}</h3>\n                <h3 className=\"movie-overview\">Overview</h3>\n                <p className=\"movie-overview summary\">{movieData.overview}</p>\n                <h4 className=\"movie-budget\">\n                  Budget:\n                  <span>${formatNums(movieData.budget)}</span>\n                </h4>\n                <h4 className=\"movie-release-date\">\n                  Release date:\n                  <span>{movieData.release_date}</span>\n                </h4>\n                <h4 className=\"movie-runtime\">\n                  Runtime:\n                  <span>{movieData.runtime} min</span>\n                </h4>\n                <a className=\"site-link\" href={movieData.homepage} target=\"_blank\">\n                  Official site\n                  <img src=\"https://img.icons8.com/material/17/ffffff/external-link--v1.png\" alt=\"External link icon\"/>\n                </a>\n                <div className=\"movie-genres\">\n                  <b>Genres:</b>\n                  {movieData.genres.map((genre, index) => (\n                    <button className=\"movie-genre-btn\" key={index}>{genre.name}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Actors */}\n            <div className=\"actors-wrap\">\n              <h2>Actors</h2>\n              {actorsList.isFetched ? (\n                <ul className=\"actors-list\">\n                  {\n                    actorData.map((actor, index) => (\n                      <ActorCard\n                        id={actor.id}\n                        name={actor.name}\n                        charName={actor.character}\n                        imgLink={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                        key={index}\n                      />\n                    ))\n                  }\n                </ul>\n              ) : (\n                <div className=\"loading\">{Loader}</div>\n              )}\n            </div>\n\n            {/* Recommendations */}\n            <div className=\"recommendations-wrap\">\n              <h2>Recommendations</h2>\n              {recommendation.isFetched ? (\n                <ul className=\"rec-list\">\n                  {recData.map((movie, index) => (\n                    <MovieCard\n                      title={movie.title}\n                      movie_id={movie.id}\n                      imgLink={movie.poster_path}\n                      rating={movie.vote_average}\n                      releaseDate={movie.release_date}\n                      key={index}\n                    />\n                  ))}\n                </ul>\n              ): (\n                <div className=\"loading\">{Loader}</div>\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"loading\">{Loader}</div>\n      )}\n    </>\n  )\n}\n\nexport default SingleMovie\n","export default __webpack_public_path__ + \"static/media/loading.114b5bc0.gif\";","import { Link } from 'react-router-dom'\n\n// SVG Icons\n// import { cineramaLogo } from '../../assets/Icons/Icons'\n// Animation\nimport loadingGIF from '../../assets/images/gif/loading.gif'\n// SCSS\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <header className=\"site-header\">\n      <nav className=\"site-nav\">\n        <div className=\"container\">\n          <ul className=\"nav-links\">\n            <li className=\"nav-item\">\n              <Link className=\"brand-logo\" to=\"/\">\n                <svg width=\"165\" height=\"26\" viewBox=\"0 0 165 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 25.821V0H20.675V25.821H0ZM18.7954 3.20616C17.1579 2.33103 15.2758 1.83246 13.2729 1.83246C6.95272 1.83246 1.82964 6.79202 1.82964 12.9105C1.82964 19.029 6.95272 23.9885 13.2729 23.9885C15.2758 23.9885 17.1579 23.49 18.7954 22.6148V18.8781C17.3304 20.1493 15.3951 20.9229 13.2729 20.9229C8.70182 20.9229 4.99644 17.3357 4.99644 12.9105C4.99644 8.4853 8.70182 4.89818 13.2729 4.89818C15.3951 4.89818 17.3304 5.67176 18.7954 6.94296V3.20616Z\" fill=\"white\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.5127 25.821V0H28.9449V25.821H22.5127ZM27.0401 1.83246H24.2842V23.9885H27.0401V1.83246Z\" fill=\"white\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M30.7832 25.821V0H50.9988V25.821H30.7832ZM32.6012 1.83246V23.9885H35.3457V9.4486L49.0679 23.9885V1.83246H46.3235V16.6032L32.6012 1.83246Z\" fill=\"white\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M52.8359 25.821V0H65.7004V25.821H52.8359ZM63.8708 23.9885V21.219H57.467V14.2952H63.8708V11.5257H57.467V4.60196H63.8708V1.83246H57.5336H54.7226V5.15811V11.1856V14.5112V21.3552V23.9885H57.5336H63.8708Z\" fill=\"white\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M67.5303 25.821V0H85.9208V25.821H67.5303ZM81.8809 8.05133C81.8809 4.10205 79.3274 1.83246 76.3299 1.83246H69.2985V14.3186V23.9885H72.0545V14.2952H73.4383L80.3224 23.9885H83.997L77.0338 14.2701C79.595 13.9202 81.8809 11.6714 81.8809 8.05133Z\" fill=\"#FFFF4D\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M113.507 25.821V0H139.254V25.821H113.507ZM119.028 1.83246L115.434 23.9885H118.606L120.297 11.1568L126.495 23.9885L132.692 11.1568L134.384 23.9885H137.556L133.961 1.83246L126.495 17.1892L119.028 1.83246Z\" fill=\"#FFFF4D\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M141.093 25.821V0H165V25.821H141.093ZM163.171 23.9885L153.048 1.9306L142.926 23.9885H146.316L148.725 18.192H157.371L159.78 23.9885H163.171Z\" fill=\"#FFFF4D\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M87.7598 25.821V0H111.667V25.821H87.7598ZM109.778 23.9885L99.6558 1.9306L89.5335 23.9885H92.9239L95.3328 18.192H103.979L106.388 23.9885H109.778Z\" fill=\"#FFFF4D\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M72.0547 4.60199H74.5633C77.2276 4.60199 78.6989 6.00414 78.6989 8.09336C78.6989 10.1826 77.3911 11.295 74.5878 11.295H72.0547V4.60199Z\" fill=\"#FFFF4D\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M102.992 15.8159L99.656 7.78961L96.3203 15.8159C98.5442 15.8159 100.768 15.8159 102.992 15.8159Z\" fill=\"#FFFF67\"/>\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M156.383 15.8159L153.048 7.78961L149.712 15.8159C151.936 15.8159 154.159 15.8159 156.383 15.8159Z\" fill=\"#FFFF67\"/>\n                </svg>\n              </Link>\n            </li>\n            <li className=\"nav-item\"><Link to=\"/movies\" className=\"nav-link\">Movies</Link></li>\n            <li className=\"nav-item\"><Link to=\"/tv-shows\" className=\"nav-link\">TV Shows</Link></li>\n            <li className=\"nav-item\"><Link to=\"/upcoming\" className=\"nav-link\">Upcoming</Link></li>\n            {/* <li className=\"nav-item\"><Link to=\"/cartoons\" className=\"nav-link\">Cartoons</Link></li> */}\n            {/* <li className=\"nav-item\"><Link to=\"/people\" className=\"nav-link\">People</Link></li> */}\n            <li className=\"nav-item\"><Link to=\"/popular\" className=\"nav-link\">Popular</Link></li>\n            <li className=\"nav-item\">\n              <button className=\"search-btn\" id=\"search-movie\"><img src=\"https://img.icons8.com/ios/40/ffffff/search--v1.png\" alt=\"Search Icon\"/></button>\n              <button className=\"signup-modal-btn\">Signup</button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      {/* Search Bar */}\n      <div className=\"search-bar\" id=\"search-bar\">\n        <div className=\"container\">\n          <form id=\"search_form\" action=\"/search\" acceptCharset=\"UTF-8\">\n            <label>\n              <span className=\"search-wrapper\">\n                <input type=\"text\" name=\"search_movie\" placeholder=\"Search...\" required />\n                <button className=\"search-clear-btn remove-bobg\" type=\"button\">\n                  <img src=\"https://img.icons8.com/ios/35/000000/delete-sign--v3.png\" alt=\"Delete sign\" />\n                </button>\n                <img className=\"loading-icon\" src={loadingGIF} alt=\"Loading gif\" />\n              </span>\n            </label>\n          </form>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\n\n// Pages\nimport {\n  Home,\n  Movies,\n  TVShows,\n  Popular,\n  Upcoming,\n  SingleMovie,\n} from './pages'\n// Containers\nimport Header from './containers/Header/Header'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/movies\" component={Movies} />\n        <Route exact path=\"/tv-shows\" component={TVShows} />\n        <Route exact path=\"/popular\" component={Popular} />\n        <Route exact path=\"/upcoming\" component={Upcoming} />\n        {/* <Route exact path=\"/actor/:actor_id\" component={ActorMovies} /> */}\n        <Route exact path=\"/movie/:movie_id\" component={SingleMovie} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}